-- Description: This migration creates a table to track deleted records for delta sync.
-- It also includes a trigger to automatically log deletions from the calendar_events table.

-- Create the deleted_records table
CREATE TABLE IF NOT EXISTS deleted_records (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    record_id UUID NOT NULL,
    table_name TEXT NOT NULL,
    deleted_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    user_id UUID REFERENCES users(id) ON DELETE CASCADE
);

-- Add an index for efficient querying by user and timestamp
CREATE INDEX IF NOT EXISTS idx_deleted_records_user_id_deleted_at ON deleted_records (user_id, deleted_at);

-- Create a function to log the deletion
CREATE OR REPLACE FUNCTION log_record_deletion()
RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO deleted_records (record_id, table_name, user_id, deleted_at)
    VALUES (OLD.id, TG_TABLE_NAME, OLD.user_id, NOW());
    RETURN OLD;
END;
$$ LANGUAGE plpgsql;

-- Create a trigger on the calendar_events table to log deletions
CREATE TRIGGER log_calendar_event_deletion
BEFORE DELETE ON calendar_events
FOR EACH ROW
EXECUTE FUNCTION log_record_deletion();
