-- Migration: Analytics Events Table
-- Date: 2025-09-27
-- Description: Create analytics_events table for tracking user interactions during closed beta

-- Create analytics_events table
CREATE TABLE IF NOT EXISTS public.analytics_events (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  event_name TEXT NOT NULL,
  payload JSONB,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Create indexes for performance
CREATE INDEX IF NOT EXISTS idx_analytics_events_user_id ON public.analytics_events(user_id);
CREATE INDEX IF NOT EXISTS idx_analytics_events_event_name ON public.analytics_events(event_name);
CREATE INDEX IF NOT EXISTS idx_analytics_events_created_at ON public.analytics_events(created_at DESC);
CREATE INDEX IF NOT EXISTS idx_analytics_events_user_created ON public.analytics_events(user_id, created_at DESC);

-- Enable Row Level Security (RLS)
ALTER TABLE public.analytics_events ENABLE ROW LEVEL SECURITY;

-- Create RLS policy - users can only access their own events
-- SQL/migrations/2025-09-27_0022_analytics_events_table.sql

CREATE POLICY "Users can only access their own analytics events" ON public.analytics_events
  FOR ALL
  USING (auth.uid() = user_id)
  WITH CHECK (auth.uid() = user_id);
-- Add comments for documentation
COMMENT ON TABLE public.analytics_events IS 'Stores user interaction events for analytics during closed beta';
COMMENT ON COLUMN public.analytics_events.id IS 'Unique identifier for each analytics event';
COMMENT ON COLUMN public.analytics_events.user_id IS 'Reference to the user who triggered the event';
COMMENT ON COLUMN public.analytics_events.event_name IS 'Name of the event being tracked (e.g., goal_created, task_completed)';
COMMENT ON COLUMN public.analytics_events.payload IS 'Additional metadata about the event in JSON format';
COMMENT ON COLUMN public.analytics_events.created_at IS 'Timestamp when the event was recorded';

-- Grant necessary permissions
GRANT ALL ON public.analytics_events TO authenticated;
GRANT ALL ON public.analytics_events TO service_role;

